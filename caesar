#!/usr/bin/env python3
from argparse import ArgumentParser
from re import search

parser = ArgumentParser()
parser.add_argument("mode", type=str, nargs='?', default="e", help="to encode use e, to decode use d (default is e)")
parser.add_argument("text", type=str, help="plain-text to encode or encoded-text to decode")
parser.add_argument("rot", type=str, nargs='?', default="13", help="rotations (default is 13 ie. rot13)")
args = parser.parse_args()


def enc(plain_text, shift, decode=False):
    output = str()
    
    if decode: actual_shift = 26 - (shift % 26)
    else: actual_shift = shift % 26

    for char in plain_text:
        if search(r"[a-zA-Z]", char):
            shifted_ascii = ord(char) + actual_shift

            if char.islower():  # lowercase (97 - 122)
                if shifted_ascii > 122: shifted_ascii = ((ord(char) + actual_shift) % 122) + 97 - 1

            elif char.isupper():  # uppercase (65 - 90)
                if shifted_ascii > 90: shifted_ascii = ((ord(char) + actual_shift) % 90) + 65 - 1

            output += chr(shifted_ascii) 
        else: output += char                
    return output


if __name__ == "__main__":
    try:
        if args.mode == "e": print(enc(args.text, int(eval(args.rot))))
        elif args.mode == "d": print(enc(args.text, int(eval(args.rot)), decode=True))
    except Exception: 
        parser.print_help()
        exit(1)